/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package linterprojsource;

import java.util.*;

public class App {

    public static void main(String[] args) {

        analyzeWeather();

        ArrayList<String> votes = new ArrayList<>();
        votes.add("Bush");
        votes.add("Bush");
        votes.add("Bush");
        votes.add("Shrub");
        votes.add("Hedge");
        votes.add("Shrub");
        votes.add("Bush");
        votes.add("Hedge");
        votes.add("Bush");

        String winner = tally(votes);
        System.out.println(winner + "received the most votes!");
    }

    public static void analyzeWeather() {
        int[][] weeklyMonthTemperatures = {
                {66, 64, 58, 65, 71, 57, 60},
                {57, 65, 65, 70, 72, 65, 51},
                {55, 54, 60, 53, 59, 57, 61},
                {65, 56, 55, 52, 55, 62, 57}
        };


        HashSet<Integer> temperatures = new HashSet<>();

        // find max temperature and low temp
        int low = weeklyMonthTemperatures[0][0];
        int high = 0;
        for (int[] weeklyTemperature : weeklyMonthTemperatures) {
            for (int dailyTemp : weeklyTemperature) {
                temperatures.add(dailyTemp);
                if (dailyTemp < low) {
                    low = dailyTemp;
                } else if (dailyTemp > high) {
                    high = dailyTemp;
                }
            }
        }
        System.out.println("High: " + high);
        System.out.println("Low: " + low);


        //finding unused temps
        for (int i = low; i < high; i++) {

            if (!temperatures.contains(i)) {
                System.out.println("Never saw temperature:" + i);
            }
        }
    }

    public static String tally(ArrayList<String> votes) {
        HashMap<String, Integer> allVotes = new HashMap<>();

        //adding all to hashmap
        for (String name :
                votes) {
            allVotes.putIfAbsent(name, 0);
            if (allVotes.containsKey(name)) {
                allVotes.put(name, (allVotes.get(name)+1));
            }
        }

        String winner = null;
        int winnerVotes = 0;
        for (Map.Entry<String, Integer> voteTally:
             allVotes.entrySet()) {
            if (voteTally.getValue() > winnerVotes) {
                winnerVotes = voteTally.getValue();
                winner = voteTally.getKey();
            }
        }


        return winner;

    }

}

